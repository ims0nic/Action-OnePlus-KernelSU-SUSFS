name: Build OnePlus_Kernel
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8650'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'pineapple'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android14'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.1'
      KERNEL_NAME:
        description: "自定义内核名称"
        required: true
        default: '-android14-11-o-g54d4b575ebf6'
      kernelsu_variant:
        description: "选择 KSU"
        required: true
        type: choice
        options:
          - KSU
          - KSUN
          - MKSU
          - RKSU
          - SKSU
          - SKSU-U
        default: KSU
      kernelsu_version:
        description: "选择 KSU 版本"
        required: true
        type: choice
        options:
          - tag[Releases]
          - main[Ci]
        default: main[Ci]
      SUSFS:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
      VFS:
        description: "添加 VFS Hooks"
        required: true
        type: boolean
        default: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "KFzZ"
         git config --global user.email "KFzZ0708@gmail.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo 和 sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: KSU & MKSU & RKSU Version
        run: |
         if [ "${{ github.event.inputs.kernelsu_version }}" == "tag[Releases]" ]; then
           echo "BRANCH=-" >> $GITHUB_ENV
         elif [ "${{ github.event.inputs.kernelsu_version }}" == "main[Ci]" ]; then
         if [ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" || "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" || "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]; then
           echo "BRANCH=-s main" >> $GITHUB_ENV
          fi
         fi

      - name: Add KernelSU
        run: |
          cd kernel_workspace/kernel_platform
          if [ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]; then
            curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash ${{ env.BRANCH }}
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s susfs-v1.5.5
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/ShirkNeko/KernelSU/main/kernel/setup.sh" | bash -s susfs-dev
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU-U" ]; then
            curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          fi
          
      - name: Apply SUSFS Patches KernelSU
        if: ${{ github.event.inputs.SUSFS == 'true' }}
        run: |
          cd kernel_workspace
          if [[ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" || "${{ github.event.inputs.kernelsu_variant }}" == "SKSU-U" ]]; then
            git clone https://github.com/ShirkNeko/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
            git clone https://github.com/ShirkNeko/SukiSU_patch.git
          else
            git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
            git clone https://github.com/TanakaLun/kernel_patches4mksu.git
          fi
            cd kernel_platform
            cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
            cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
            cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          if [ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" ]; then
            cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU
            cd ./KernelSU
            patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]; then
            cd ./KernelSU-Next
            cp ../../kernel_patches4mksu/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./
            patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" ]; then
            cd ./KernelSU
            cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./
            patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
            cp ../../kernel_patches4mksu/mksu/mksu_susfs.patch ./
            patch -p1 < mksu_susfs.patch || true
            cp ../../kernel_patches4mksu/mksu/fix.patch ./
            patch -p1 < fix.patch || true
            cp ../../kernel_patches4mksu/mksu/vfs_fix.patch ./
            patch -p1 < vfs_fix.patch
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]; then
            cd KernelSU
          elif [[ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" || "${{ github.event.inputs.kernelsu_variant }}" == "SKSU-U" ]]; then
            #cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux
            #cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib
            #cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto
            cd KernelSU
          fi
          
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true

      - name: Apply VFS Hooks Patches
        if: ${{ github.event.inputs.VFS == 'true' }}
        run: |
         cd kernel_workspace/kernel_platform/common
         if [ "${{ github.event.inputs.kernelsu_variant }}" = "KSUN" ]; then
            cp ../../kernel_patches4mksu/next/syscall_hooks.patch ./
            patch -p1 -F 3 < syscall_hooks.patch
         elif [ "${{ github.event.inputs.kernelsu_variant }}" = "MKSU" ]; then
            cp ../../kernel_patches4mksu/hooks/new_hooks.patch ./
            patch -p1 -F 3 < new_hooks.patch
         elif [[ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" || "${{ github.event.inputs.kernelsu_variant }}" == "SKSU-U" ]]; then
            cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
            patch -p1 -F 3 < syscall_hooks.patch
            #cp ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
            #patch -p1 -F 3 < lz4kd.patch || true
         fi

      - name: Add SUSFS Configuration Settings
        if: ${{ github.event.inputs.SUSFS == 'true' }}
        run: |
         cd kernel_workspace/kernel_platform
         echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig

          if [ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU-U" ]; then
            echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "5.10" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_MODULE_SIG=n" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZO=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM_DEF_COMP_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" != "6.6" ] && [ "${{ github.event.inputs.KERNEL_VERSION }}" != "5.10" ]; then
          #  sed -i 's/CONFIG_MODULE_SIG=y/CONFIG_MODULE_SIG=n/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.6" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if grep -q "CONFIG_ZSMALLOC=y" ./common/arch/arm64/configs/gki_defconfig && grep -q "CONFIG_ZRAM=y" ./common/arch/arm64/configs/gki_defconfig; then
          #  echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi

          if [ "${{ github.event.inputs.VFS }}" == 'true' ]; then
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          else
            echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi

          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
          
      - name: Handle KernelSU Version
        run: |
         if [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]]; then
            cd kernel_workspace/kernel_platform/KernelSU-Next
            MAKE_FILE="kernel/Makefile"
            DEFAULT_VERSION=11998  
         elif [[ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" ]]; then
            cd kernel_workspace/kernel_platform/KernelSU
            MAKE_FILE="kernel/Makefile"
            DEFAULT_VERSION=16
            KSU_VERSION=$(expr $(git rev-list --count main) + 10606)
         elif [[ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU-U" ]]; then
            cd kernel_workspace/kernel_platform/KernelSU
            MAKE_FILE="kernel/Makefile"
            DEFAULT_VERSION=12800
            KSU_VERSION=$(expr $(git rev-list --count main) + 10606)
         else
            cd kernel_workspace/kernel_platform/KernelSU
            MAKE_FILE="kernel/Makefile"
            DEFAULT_VERSION=16    
         fi

         if [[ "${{ github.event.inputs.kernelsu_variant }}" != "SKSU" && "${{ github.event.inputs.kernelsu_variant }}" != "SKSU-U" ]]; then
              KSU_VERSION=$(( $(git rev-list --count HEAD) + 10200 ))
            fi

         sed -i "s/DKSU_VERSION=${DEFAULT_VERSION}/DKSU_VERSION=${KSU_VERSION}/" "${MAKE_FILE}"
         echo "KSUVER=${KSU_VERSION}" >> $GITHUB_ENV

      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
         sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
  
      - name: Build kernel
        if: ${{ github.event.inputs.CPU == 'sm8650' || github.event.inputs.CPU == 'sm8750' || github.event.inputs.CPU == 'sm7675' }}
        run: |
          cd kernel_workspace
          ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} gki
          
      - name: Fallback build kernel
        if: ${{ github.event.inputs.CPU != 'sm8650' && github.event.inputs.CPU != 'sm8750' && github.event.inputs.CPU != 'sm7675' }}
        run: |
         cd kernel_workspace
         LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki

      - name: Make AnyKernel3
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          dir1="./kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/"
          dir2="./kernel_workspace/kernel_platform/common/out/arch/arm64/boot/"
          dir3="./kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/dist/"
          target1="./AnyKernel3/"
          target2="./kernel_workspace/kernel"

          if find "$dir1" -name "Image" | grep -q "Image"; then
            image_path="$dir1"Image
          elif find "$dir2" -name "Image" | grep -q "Image"; then
            image_path="$dir2"Image
          elif find "$dir3" -name "Image" | grep -q "Image"; then
            image_path="$dir3"Image
          else
            image_path=$(find "./kernel_workspace/kernel_platform/common/out/" -name "Image" | head -n 1)
          fi

          if [ -n "$image_path" ] && [ -f "$image_path" ]; then
            mkdir -p "$dir1"
            if [ "$(realpath "$image_path")" != "$(realpath "$dir1"Image)" ]; then
              cp "$image_path" "$dir1"
            else
              echo "源文件与目标相同，跳过复制"
            fi
          else
            echo "未找到 Image 文件，构建可能失败"
            exit 1
          fi

      - name: Apply patch_linux and replace Image
        if: ${{ github.event.inputs.kernelsu_variant == 'SKSU-U' }}
        run: |
          cd kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          cp Image $GITHUB_WORKSPACE/AnyKernel3/Image
          cp Image $GITHUB_WORKSPACE/kernel_workspace/kernel

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3-KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*
